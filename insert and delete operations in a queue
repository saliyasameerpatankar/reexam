#include <stdio.h>

#define MAX_SIZE 5

struct Queue {
    int front, rear;
    int elements[MAX_SIZE];
};

// Function to initialize a queue
void initializeQueue(struct Queue *q) {
    q->front = -1;
    q->rear = -1;
}

// Function to check if the queue is empty
int isEmpty(struct Queue *q) {
    return q->front == -1;
}

// Function to check if the queue is full
int isFull(struct Queue *q) {
    return (q->rear + 1) % MAX_SIZE == q->front;
}

// Function to insert an element into the queue
void enqueue(struct Queue *q, int item) {
    if (isFull(q)) {
        printf("Queue is full. Cannot enqueue %d\n", item);
    } else {
        if (isEmpty(q)) {
            q->front = 0;
        }
        q->rear = (q->rear + 1) % MAX_SIZE;
        q->elements[q->rear] = item;
    }
}

// Function to delete an element from the queue
int dequeue(struct Queue *q) {
    int item = -1;
    if (isEmpty(q)) {
        printf("Queue is empty. Cannot dequeue.\n");
    } else {
        item = q->elements[q->front];
        if (q->front == q->rear) {
            // If there was only one element, reset front and rear
            initializeQueue(q);
        } else {
            q->front = (q->front + 1) % MAX_SIZE;
        }
    }
    return item;
}

// Function to display the contents of the queue
void display(struct Queue *q) {
    int i;
    if (isEmpty(q)) {
        printf("Queue is empty.\n");
    } else {
        printf("Contents of the queue: ");
        for (i = q->front; i != q->rear; i = (i + 1) % MAX_SIZE) {
            printf("%d, ", q->elements[i]);
        }
        printf("%d\n", q->elements[i]);
    }
}

// Example Usage
int main() {
    struct Queue myQueue;
    initializeQueue(&myQueue);

    // Insertion
    enqueue(&myQueue, 12);
    enqueue(&myQueue, 34);
    enqueue(&myQueue, 56);
    enqueue(&myQueue, 78);

    // Display after insertion
    display(&myQueue);

    // Inserting 60
    enqueue(&myQueue, 60);

    // Display after insertion of 60
    display(&myQueue);

    // Deletion of 12
    int removedItem = dequeue(&myQueue);
    printf("Removed item: %d\n", removedItem);

    // Display after deletion
    display(&myQueue);

    return 0;
}
